concise 

JavaScript also provides several ways to refactor arrow function syntax. The most condensed form of the function is known as concise body. Weâ€™ll explore a few of these techniques below:

Functions that take only a single parameter do not need that parameter to be enclosed in parentheses. However, if a function takes zero or multiple parameters, parentheses are required.


zero parameters
const functionName=()=>{}

one parameter
const functionName=paramOne=>{}

two or more parameters
const functionName=(paramOne,paramTwo)=>{}


A function body composed of a single-line block does not need curly braces. Without the curly braces, whatever that line evaluates will be automatically returned. The contents of the block should immediately follow the arrow => and the return keyword can be removed. This is referred to as implicit return.

single-line block
const sumNumbers=number=>number+number     --this is a implicit return

multi-line block
const sumNumbers=number=>{
    const sum=number+number
    return sum     --return statement
}